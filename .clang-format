# clang-format-8
Language: Cpp
AccessModifierOffset: -4                            # public: private: 들여쓰기 offset
AlignAfterOpenBracket: Align                        # 매개변수 정렬
# AlignConsecutiveMacros: true                        # 매크로 정렬(clang 10)
AlignConsecutiveAssignments: true                   # 연속적인 변수 초기화 정렬
AlignConsecutiveDeclarations: true                  # 연속적인 타입 변수 정렬
AlignEscapedNewlines: Left                          # \ 줄바꾸기 가장 가까운 쪽
AlignOperands: true                                 # 연산자 정렬
AlignTrailingComments: true                         # 끝의 주석 정렬
AllowAllParametersOfDeclarationOnNextLine: false    # 길면 한 줄에 하나씩
AllowShortBlocksOnASingleLine: false                # 짧은 {} 한 줄로 안함
AllowShortCaseLabelsOnASingleLine: false            # 짧은 case 문 한 줄로 안함
AllowShortFunctionsOnASingleLine: None              # 한 줄로 변경 안함
AllowShortIfStatementsOnASingleLine: false          # 짧은 if 한 줄로 정리 안함
AllowShortLoopsOnASingleLine: false                 # 짧은 루프 한 줄로
AlwaysBreakAfterReturnType: None                    # 리턴타입 줄 바꿈
AlwaysBreakBeforeMultilineStrings: true             # 여러 줄 str 처음 줄 바꿈
AlwaysBreakTemplateDeclarations: Yes                # 템플릿 줄 바꿈
BinPackArguments: false                             # 매개변수 정렬
BinPackParameters: false                            # 선언시 매개변수 정렬
BraceWrapping:                                      # 다음줄에 괄호를 시작할지 결정
  AfterClass:               true
  AfterControlStatement:    true                    # if, else, for 등 다음줄에 { 시작
  AfterEnum:                true
  AfterFunction:            true
  AfterNamespace:           true
  AfterObjCDeclaration:     true
  AfterStruct:              true
  AfterUnion:               true
  AfterExternBlock:         false
  BeforeCatch:              true
  BeforeElse:               true
  IndentBraces:             false
  SplitEmptyFunction:       true
  SplitEmptyRecord:         true
  SplitEmptyNamespace:      true
BreakBeforeBinaryOperators: All                     # 연산자 전에 줄 바꿈
BreakBeforeBraces: Custom                           # BraceWrapping Custom
BreakBeforeTernaryOperators: true                   # ? : (삼항)연산자 전에 줄 바꿈
BreakConstructorInitializers: BeforeComma
BreakInheritanceList: BeforeComma
ColumnLimit: 80                                     # 한 줄 간격
# CommentPragmas: '^ IWYU pragma:'
CompactNamespaces: false
ConstructorInitializerAllOnOneLineOrOnePerLine: false
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: false                         # {} 안에 띄어쓰기
DerivePointerAlignment: false                       # .PointerAlignmet fallback
DisableFormat: false
FixNamespaceComments: true
IncludeBlocks:   Preserve
IncludeCategories:
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        2
  - Regex:           '^(<|"(gtest|gmock|isl|json)/)'
    Priority:        3
  - Regex:           '.*'
    Priority:        1
IncludeIsMainRegex: '(Test)?$'
IndentCaseLabels: true                              # switch case indent
IndentPPDirectives: None                            # 전처리 indent 안함
IndentWidth: 4
IndentWrappedFunctionNames: true
KeepEmptyLinesAtTheStartOfBlocks: false             # 시작 시 빈줄 제거
MacroBlockBegin: ''
MacroBlockEnd:   ''
MaxEmptyLinesToKeep: 2                              # 최대 빈 줄
NamespaceIndentation: Inner
PointerAlignment: Right                             # uint16_t *a;
ReflowComments: false                               # comment 줄 변경
SortIncludes: false
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: false
SpaceBeforeAssignmentOperators: true                # = 앞 공백
SpaceBeforeCpp11BracedList: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: Never                            # () 앞 띄어쓰기
SpaceBeforeRangeBasedForLoopColon: true
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 4                     # // 앞 공백
SpacesInAngles: false
SpacesInCStyleCastParentheses: true
SpacesInContainerLiterals: true
SpacesInParentheses: true
SpacesInSquareBrackets: false
Standard:   Cpp11
TabWidth:   4
UseTab:     Never